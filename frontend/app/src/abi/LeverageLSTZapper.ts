// this file was generated by scripts/update-liquity-abis.ts
// please do not edit it manually
export const LeverageLSTZapper = [
  {
    inputs: [
      {
        internalType: "contract IAddressesRegistry",
        name: "_addressesRegistry",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_collateralToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "EmptyManager", type: "error" },
  { inputs: [], name: "NotBorrower", type: "error" },
  { inputs: [], name: "NotOwnerNorAddManager", type: "error" },
  { inputs: [], name: "NotOwnerNorRemoveManager", type: "error" },
  {
    inputs: [{ internalType: "address", name: "_user", type: "address" }],
    name: "NotWhitelisted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_troveId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_newAddManager",
        type: "address",
      },
    ],
    name: "AddManagerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_troveId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_newRemoveManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_newReceiver",
        type: "address",
      },
    ],
    name: "RemoveManagerAndReceiverUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_newTroveNFTAddress",
        type: "address",
      },
    ],
    name: "TroveNFTAddressChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [{ internalType: "contract IWETH", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_troveId", type: "uint256" },
      { internalType: "uint256", name: "tokenAmount", type: "uint256" },
    ],
    name: "addCollWithRawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "addManagerOf",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_troveId", type: "uint256" },
      { internalType: "uint256", name: "_collChange", type: "uint256" },
      { internalType: "bool", name: "_isCollIncrease", type: "bool" },
      { internalType: "uint256", name: "_boldChange", type: "uint256" },
      { internalType: "bool", name: "_isDebtIncrease", type: "bool" },
      { internalType: "uint256", name: "_maxUpfrontFee", type: "uint256" },
    ],
    name: "adjustTroveWithRawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_troveId", type: "uint256" },
      { internalType: "uint256", name: "_collChange", type: "uint256" },
      { internalType: "bool", name: "_isCollIncrease", type: "bool" },
      { internalType: "uint256", name: "_boldChange", type: "uint256" },
      { internalType: "bool", name: "_isDebtIncrease", type: "bool" },
      { internalType: "uint256", name: "_upperHint", type: "uint256" },
      { internalType: "uint256", name: "_lowerHint", type: "uint256" },
      { internalType: "uint256", name: "_maxUpfrontFee", type: "uint256" },
    ],
    name: "adjustZombieTroveWithRawETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "boldToken",
    outputs: [
      { internalType: "contract IBoldToken", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowerOperations",
    outputs: [
      {
        internalType: "contract IBorrowerOperations",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_troveId", type: "uint256" }],
    name: "closeTroveToRawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralToken",
    outputs: [{ internalType: "contract IERC20", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "uint256", name: "ownerIndex", type: "uint256" },
          { internalType: "uint256", name: "collAmount", type: "uint256" },
          { internalType: "uint256", name: "boldAmount", type: "uint256" },
          { internalType: "uint256", name: "upperHint", type: "uint256" },
          { internalType: "uint256", name: "lowerHint", type: "uint256" },
          {
            internalType: "uint256",
            name: "annualInterestRate",
            type: "uint256",
          },
          { internalType: "address", name: "batchManager", type: "address" },
          { internalType: "uint256", name: "maxUpfrontFee", type: "uint256" },
          { internalType: "address", name: "addManager", type: "address" },
          { internalType: "address", name: "removeManager", type: "address" },
          { internalType: "address", name: "receiver", type: "address" },
        ],
        internalType: "struct ITokenZapper.OpenTroveParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "openTroveWithRawETH",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "removeManagerReceiverOf",
    outputs: [
      { internalType: "address", name: "manager", type: "address" },
      { internalType: "address", name: "receiver", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_troveId", type: "uint256" },
      { internalType: "uint256", name: "_boldAmount", type: "uint256" },
    ],
    name: "repayBold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_troveId", type: "uint256" },
      { internalType: "address", name: "_manager", type: "address" },
    ],
    name: "setAddManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_troveId", type: "uint256" },
      { internalType: "address", name: "_manager", type: "address" },
      { internalType: "address", name: "_receiver", type: "address" },
    ],
    name: "setRemoveManagerWithReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "troveManager",
    outputs: [
      { internalType: "contract ITroveManager", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelist",
    outputs: [
      { internalType: "contract IWhitelist", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_troveId", type: "uint256" },
      { internalType: "uint256", name: "_boldAmount", type: "uint256" },
      { internalType: "uint256", name: "_maxUpfrontFee", type: "uint256" },
    ],
    name: "withdrawBold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_troveId", type: "uint256" },
      { internalType: "uint256", name: "_amount", type: "uint256" },
    ],
    name: "withdrawCollToRawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  { stateMutability: "payable", type: "receive" },
] as const;
